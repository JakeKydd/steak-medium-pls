/*
 * Browser.java
 *
 * Created on 16. Juni 2008, 12:05
 */

package spinfo.minisearch.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

import javax.swing.JEditorPane;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLFrameHyperlinkEvent;

/**
 * Ein sehr einfacher HTML-Browser, der genutzt wird, um die Dokumentation des Programms
 * anzuzeigen, wenn der Menupunkt "JavaDoc anzeigen" aufgerufen wird. 
 * 
 * Diese Klasse wurde mit dem Netbeans-GUI-Editor erstellt - der Code ist nicht unbedingt
 * für menschliche Leser gedacht.
 * 
 */
public class Browser extends javax.swing.JFrame implements HyperlinkListener {
	
	private static final long serialVersionUID = -4441413186973631928L;
	/** Creates new form Browser */
    public Browser(String programName) {
        initComponents();
        editorPane.addHyperlinkListener(this);
        super.setTitle("JavaDoc Browser für " + programName);
    }
    
    public void hyperlinkUpdate(HyperlinkEvent e) {
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        	JEditorPane pane = (JEditorPane) e.getSource(); 
            if (e instanceof HTMLFrameHyperlinkEvent) {
              HTMLFrameHyperlinkEvent evt = 
                                     (HTMLFrameHyperlinkEvent)e;
              HTMLDocument doc = 
                   (HTMLDocument)pane.getDocument();
              doc.processHTMLFrameHyperlinkEvent(evt);
            } else try {
                 // Normaler Link
                 pane.setPage(e.getURL());
               } catch (Throwable t) {
                   t.printStackTrace();
               }
          }
        }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolbar = new javax.swing.JToolBar();
        home = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();
        goHome();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        toolbar.setFloatable(false);
        toolbar.setRollover(true);

        home.setText("Start");
        home.setFocusable(false);
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				goHome();
			}
        	
        });
       // toolbar.add(home);

        editorPane.setEditable(false);
        scrollPane.setViewportView(editorPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(toolbar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
            .add(scrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(toolbar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(scrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void goHome() {
		File indexFile = new File(new File("doc"), "index.html");
        try {
			editorPane.setPage(indexFile.toURL());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JButton home;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables

}
